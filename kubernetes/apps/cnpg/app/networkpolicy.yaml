apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: cnpg-system
  namespace: cnpg-system
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/name: cloudnative-pg
  egress:
    # Allow egress to Kubernetes API server.
    - toEntities:
        - kube-apiserver
    # Allow egress to status and database endpoints of managed Postgres cluster pods.
    - toEndpoints:
        - matchExpressions:
            - key: cnpg.io/cluster
              operator: Exists
            - key: k8s:io.kubernetes.pod.namespace
              operator: Exists
      toPorts:
      - ports:
        - port: "8000"
          protocol: TCP
        - port: "5432"
          protocol: TCP
  ingress:
    # Allow access to call the webhook. Cilium sees this as "remote-node" instead of "kube-apiserver".
    - fromEntities:
      - kube-apiserver
      - remote-node
      toPorts:
      - ports:
        - port: "9443"
    # Allow scraping metrics.
    - fromEntities:
      - cluster
      toPorts:
      - ports:
        - port: "8080"
---
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: cnpg
spec:
  endpointSelector:
    matchExpressions:
      - key: cnpg.io/cluster
        operator: Exists
  ingress:
    - fromEndpoints:
        - {}
    - fromEndpoints:
        - matchLabels:
            k8s:io.kubernetes.pod.namespace: cnpg-system
            app.kubernetes.io/name: cloudnative-pg
  egress:
    - toEndpoints:
        - matchExpressions:
            - key: cnpg.io/cluster
              operator: Exists
    - toEntities:
        - kube-apiserver
      toPorts:
        - ports:
            - port: "443"
            - port: "6443"
---
# This policy targets all pods that belong to any CNPG-managed Postgres cluster (instance, init, join).
apiVersion: cilium.io/v2
kind: CiliumClusterwideNetworkPolicy
metadata:
  name: cnpg-db-dns
spec:
  endpointSelector:
    matchExpressions:
      - key: cnpg.io/cluster
        operator: Exists
  egress:
    - toEndpoints:
        - matchLabels:
            k8s:io.kubernetes.pod.namespace: kube-system
            app.kubernetes.io/name: coredns
        - matchLabels:
            k8s:io.kubernetes.pod.namespace: kube-system
            app.kubernetes.io/name: k8s-dns-node-cache
      toPorts:
        - ports:
            - port: "1053"
              protocol: UDP
            - port: "1053"
              protocol: TCP
            - port: "53"
              protocol: UDP
            - port: "53"
              protocol: TCP
