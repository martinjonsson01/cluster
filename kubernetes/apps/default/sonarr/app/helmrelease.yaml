---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  driftDetection:
    mode: enabled
  values:
    controllers:
      sonarr:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
#          app:
#            image:
#              repository: ghcr.io/onedr0p/sonarr-develop
#              tag: 4.0.9.2457@sha256:d981084e9534a6f4a089926625ba4679089dbced7693460df7d83233177c1f92
#            env:
#              SONARR__APP__INSTANCENAME: Sonarr
#              SONARR__APP__THEME: dark
#              SONARR__AUTH__METHOD: External
#              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
#              SONARR__LOG__DBENABLED: "False"
#              SONARR__LOG__LEVEL: info
#              SONARR__SERVER__PORT: &port 80
#              SONARR__UPDATE__BRANCH: develop
#              SONARR__POSTGRES__HOST: sonarr-db.default.svc.cluster.local
#              SONARR__POSTGRES__PORT:
#                secretKeyRef:
#                  name: sonarr-db-app
#                  key: port
#              SONARR__POSTGRES__USER:
#                secretKeyRef:
#                  name: sonarr-db-app
#                  key: user
#              SONARR__POSTGRES__PASSWORD:
#                secretKeyRef:
#                  name: sonarr-db-app
#                  key: password
#              SONARR__POSTGRES__MAINDB:
#                secretKeyRef:
#                  name: sonarr-db-app
#                  key: dbname
#              TZ: ${TIMEZONE}
#            envFrom:
#              - secretRef:
#                  name: sonarr-secret
#            probes:
#              liveness: &probes
#                enabled: true
#                custom: true
#                spec:
#                  httpGet:
#                    path: /ping
#                    port: *port
#                  initialDelaySeconds: 0
#                  periodSeconds: 10
#                  timeoutSeconds: 1
#                  failureThreshold: 3
#              readiness: *probes
#            securityContext:
#              allowPrivilegeEscalation: false
#              readOnlyRootFilesystem: true
#              capabilities: { drop: ["ALL"] }
#            resources:
#              requests:
#                cpu: 100m
#              limits:
#                memory: 4Gi
          filebrowser:
            image:
              repository: docker.io/filebrowser/filebrowser
              tag: v2.31.2@sha256:a4da9ca8364b0a1fc5dd36f7add92582bf673c0ae0bda8dd9bd13062c41d1715
            env:
              TZ: ${TIMEZONE}
              FB_DATABASE: /config/filebrowser.db
              FB_ROOT: /config
              FB_LOG: stdout
              FB_NOAUTH: true
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [10000]
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: sonarr
        ports:
#          http:
#            port: *port
          filebrowser:
            port: 80
    ingress:
#      app:
#        annotations:
#          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
#        className: internal
#        hosts:
#          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
#            paths:
#              - path: /
#                service:
#                  identifier: app
#                  port: http
      filebrowser:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        className: internal
        hosts:
          - host: sonarr-files.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: filebrowser
    persistence:
      config:
        existingClaim: sonarr
      tmp:
        type: emptyDir
      media:
        type: nfs
        server: ${SECRET_NAS_IP}
        path: /volume1/Media/media
        globalMounts:
          - path: /media
