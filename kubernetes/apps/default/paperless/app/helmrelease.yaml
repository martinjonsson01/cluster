---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: paperless
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  driftDetection:
    mode: enabled
  dependsOn:
    - name: longhorn
      namespace: storage
    - name: cnpg
      namespace: cnpg-system
  values:
    controllers:
      paperless:
        annotations:
          reloader.stakater.com/auto: "true"
        pod:
          securityContext:
            supplementalGroups:
              - 65542
              - 568
              - 1000
        containers:
          app:
            image:
              repository: ghcr.io/paperless-ngx/paperless-ngx
              tag: 2.14.7
            dependsOn:
              - broker
              - gotenberg
              - tika
            env:
              # Configure application
              PAPERLESS_URL: https://papers.${SECRET_DOMAIN}
              PAPERLESS_PORT: "8000"
              PAPERLESS_TIME_ZONE: ${TIMEZONE}
              PAPERLESS_WEBSERVER_WORKERS: "2"
              PAPERLESS_TASK_WORKERS: "2"
              # Configure Remote User auth
              PAPERLESS_ACCOUNT_ALLOW_SIGNUPS: "false"
              PAPERLESS_SOCIALACCOUNT_ALLOW_SIGNUPS: "false"
              # Configure folders
              PAPERLESS_CONSUMPTION_DIR: /data/nas/incoming
              PAPERLESS_DATA_DIR: /data/local/data
              PAPERLESS_EXPORT_DIR: /data/nas/export
              PAPERLESS_MEDIA_ROOT: /data/nas/media
              # Configure folder importer
              PAPERLESS_CONSUMER_POLLING: "60"
              PAPERLESS_CONSUMER_RECURSIVE: "true"
              PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: "true"
              # Configure OCR
              PAPERLESS_OCR_LANGUAGES: swe eng
              PAPERLESS_OCR_LANGUAGE: swe
              PAPERLESS_OCR_USER_ARGS: '{"invalidate_digital_signatures": true}' # Allows importing and OCR:ing of signed PDFs (originals still kept with their signatures)
              # Enable TIKA
              PAPERLESS_TIKA_ENABLED: true
              PAPERLESS_TIKA_ENDPOINT: http://127.0.0.1:9998
              PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://127.0.0.1:3000
              # Configure redis integration
              PAPERLESS_REDIS: redis://127.0.0.1:6379
              # Configure database
              PAPERLESS_DBENGINE: postgresql
              PAPERLESS_DBHOST:
                secretKeyRef:
                  name: paperless-db-app
                  key: host
              PAPERLESS_DBNAME:
                secretKeyRef:
                  name: paperless-db-app
                  key: dbname
              PAPERLESS_DBUSER:
                secretKeyRef:
                  name: paperless-db-app
                  key: user
              PAPERLESS_DBPASS:
                secretKeyRef:
                  name: paperless-db-app
                  key: password
              # Configure user permissions
              USERMAP_UID: "1000"
              USERMAP_GID: "1000"
            envFrom:
              - secretRef:
                  name: paperless-secret
            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true
              startup:
                enabled: true
                spec:
                  failureThreshold: 30
                  periodSeconds: 5
            resources:
              requests:
                cpu: 25m
                memory: 2Gi
              limits:
                memory: 16Gi
          broker:
            image:
              repository: docker.io/valkey/valkey
              tag: 8.0.2
            ports:
              - containerPort: 6379
            resources:
              requests:
                cpu: 5m
                memory: 32Mi
              limits:
                memory: 128Mi
          tika:
            image:
              repository: docker.io/apache/tika
              tag: 3.1.0.0-full
              pullPolicy: IfNotPresent
            ports:
              - containerPort: 9998
          gotenberg:
            image:
              repository: docker.io/gotenberg/gotenberg
              tag: 8.19.1
              pullPolicy: IfNotPresent
            ports:
              - containerPort: 3000
            command:
              - "gotenberg"
              - "--chromium-disable-javascript=true"
              - "--chromium-allow-list=file:///tmp/.*"

    service:
      app:
        controller: paperless
        ports:
          http:
            port: 8000

    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Services
          gethomepage.dev/icon: sh-paperless-ngx.svg
          gethomepage.dev/name: Paperless
          gethomepage.dev/widget.type: paperlessngx
          gethomepage.dev/widget.url: http://paperless.default.svc:8000
          gethomepage.dev/widget.key: ${SECRET_HOMEPAGE_VAR_PAPERLESS_API_TOKEN}
          gethomepage.dev/widget.fields: '["total", "inbox"]'
        className: internal
        hosts:
          - host: papers.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      data:
        existingClaim: paperless
        advancedMounts:
          paperless:
            app:
              - path: /data/local
      nas:
        type: nfs
        server: ${SECRET_NAS_IP}
        path: /volume1/homes/martinjonsson01/Drive/paperless
        advancedMounts:
          paperless:
            app:
              - path: /data/nas
