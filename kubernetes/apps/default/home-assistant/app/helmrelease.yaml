---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: home-assistant
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.5.0
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    controllers:
      home-assistant:
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
#          app:
#            image:
#              repository: ghcr.io/onedr0p/home-assistant
#              tag: 2024.10.0@sha256:1c61cc33a693176b4b6b930080196e204d3df094d7674bad3f62ed54cccef92c
#            env:
#              TZ: ${TIMEZONE}
#              HASS_HTTP_TRUSTED_PROXY_1: "${NODE_CIDR}"
#              HASS_HTTP_TRUSTED_PROXY_2: "${POD_CIDR}"
#              HASS_HTTP_TRUSTED_PROXY_3: "${SERVICE_CIDR}"
#              HASS_URL: "https://hass.${SECRET_DOMAIN}"
#            envFrom:
#              - secretRef:
#                  name: home-assistant-secret
#            securityContext:
#              allowPrivilegeEscalation: false
#              readOnlyRootFilesystem: true
#              capabilities: { drop: ["ALL"] }
#            resources:
#              requests:
#                cpu: 10m
#              limits:
#                memory: 2Gi
          code-server:
            image:
              repository: ghcr.io/coder/code-server
              tag: 4.93.1@sha256:c69e398d1b64589b3b77a7becfd03f4ec524982def20e6bffbb51b1b839e72ba
            args: [
              "--auth", "none",
              "--user-data-dir", "/config/.vscode",
              "--extensions-dir", "/config/.vscode",
              "--port", "12321",
              "/config"
            ]
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 512Mi
          filebrowser:
            image:
              repository: docker.io/filebrowser/filebrowser
              tag: v2.31.1@sha256:b9b0dcac8b20c01ed4777889c8ae6ff74443ed604e11e4b862d9f3068eeb9114
            env:
              TZ: ${TIMEZONE}
              FB_DATABASE: /config/filebrowser.db
              FB_ROOT: /config
              FB_LOG: stdout
              FB_NOAUTH: true
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
              limits:
                memory: 2Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 568
        runAsGroup: 568
        fsGroup: 568
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      app:
        controller: home-assistant
        ports:
          http:
            port: 8123
          code-server:
            port: 12321
          filebrowser:
            port: 80
    ingress:
#      app:
#        annotations:
#          external-dns.alpha.kubernetes.io/target: external.${SECRET_DOMAIN}
#        className: external
#        hosts:
#          - host: hass.${SECRET_DOMAIN}
#            paths:
#              - path: /
#                service:
#                  identifier: app
#                  port: http
      code-server:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        className: internal
        hosts:
          - host: hass-code.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: code-server
      filebrowser:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
        className: internal
        hosts:
          - host: hass-files.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  identifier: app
                  port: filebrowser
    persistence:
      config:
        existingClaim: home-assistant
        globalMounts:
          - path: /config
      logs:
        type: emptyDir
        globalMounts:
          - path: /config/logs
      tts:
        type: emptyDir
        globalMounts:
          - path: /config/tts
      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
