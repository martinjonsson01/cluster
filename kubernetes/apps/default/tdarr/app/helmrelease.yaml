---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tdarr
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.7.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 4
  driftDetection:
    mode: enabled

  values:
    controllers:
      tdarr:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/haveagitgat/tdarr
              tag: 2.47.01
            env:
              TZ: ${TIMEZONE}
              PUID: 1000
              PGID: 1000
            resources:
              requests:
                cpu: 10m
                memory: 300Mi
              limits:
                memory: 600Mi

    defaultPodOptions:
      securityContext:
        runAsNonRoot: false
        runAsUser: 0
        runAsGroup: 0
        fsGroup: 0
        fsGroupChangePolicy: OnRootMismatch
        supplementalGroups: [44]
        seccompProfile: { type: RuntimeDefault }
      nodeSelector:
        intel.feature.node.kubernetes.io/gpu: "true"

    service:
      app:
        controller: tdarr
        ports:
          http:
            port: 8265
          server:
            enabled: true
            protocol: TCP
            port: 8266

    ingress:
      app:
        annotations:
          external-dns.alpha.kubernetes.io/target: internal.${SECRET_DOMAIN}
          gethomepage.dev/enabled: "true"
          gethomepage.dev/group: Tools
          gethomepage.dev/icon: sh-tdarr.svg
          gethomepage.dev/name: Tdarr
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.${SECRET_DOMAIN}"
            paths:
              - path: /
                service:
                  identifier: app
                  port: http

    persistence:
      config:
        existingClaim: tdarr
        advancedMounts:
          tdarr:
            tdarr:
              - path: /app/configs
                subPath: config
              - path: /app/server
                subPath: server
      media:
        type: nfs
        server: ${SECRET_NAS_IP}
        path: /volume1/Media
        globalMounts:
          - path: /Media
